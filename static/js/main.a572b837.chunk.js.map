{"version":3,"sources":["images/starwars.png","images/luke.png","images/vader.png","context/index.js","components/DeleteFilters.js","components/Order.js","components/FilterNumericValues.js","components/FilterPlanetsInput.js","components/Planets.js","components/TableBody.js","components/TableHeader.js","components/Table.js","pages/HomePage.js","context/Provider.js","App.js","index.js"],"names":["module","exports","MyContext","createContext","DeleteFilters","useContext","filterContext","filters","filterByNumericValues","setFilterByNumericValues","handleClick","name","target","deleteFilters","filter","fil","column","map","comparison","value","key","data-testid","onClick","type","Order","planets","state","results","order","setOrder","result","handleOrder","isNumeric","test","sort","a","b","localeCompare","className","onChange","Object","keys","planetInfo","FilterNumericValues","setColumn","setComparison","setValue","numericValues","columns","useState","col","setCol","handleChange","c","comp","placeholder","colun","newColumns","coluna","filterColumns","FilterPlanetsByInput","setName","filterByName","Planets","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","TableBody","planet","toLowerCase","includes","length","reduce","accumulator","current","Number","TableHeader","Table","loading","src","luke","alt","starwarslogo","vader","id","class","style","width","HomePage","Provider","children","setState","setLoading","setResult","useEffect","fetch","then","res","json","response","swPlanets","App","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a572b837.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/starwars.b2d30e6d.png\";","module.exports = __webpack_public_path__ + \"static/media/luke.00f28d83.png\";","module.exports = __webpack_public_path__ + \"static/media/vader.5dc128ef.png\";","import { createContext } from 'react';\n\nconst MyContext = createContext();\n\nexport default MyContext;\n","import React, { useContext } from 'react';\nimport MyContext from '../context';\n\nexport default function DeleteFilters() {\n  const { filterContext:\n    { filters:\n      { filterByNumericValues, setFilterByNumericValues } } } = useContext(MyContext);\n\n  const handleClick = ({ target: { name } }) => {\n    const deleteFilters = filterByNumericValues.filter((fil) => fil.column !== name);\n    setFilterByNumericValues(deleteFilters);\n  };\n\n  const deleteFilter = () => {\n    const xablau = 'X';\n    return filterByNumericValues.map(({ column, comparison, value }) => (\n      <div key={ value } data-testid=\"filter\">\n        <p key={ value }>\n          {`${column} ${comparison} ${value}`}\n        </p>\n        <button\n          name={ column }\n          onClick={ handleClick }\n          type=\"button\"\n        >\n          { xablau }\n        </button>\n      </div>\n    ));\n  };\n\n  return (\n    <div>\n      { filterByNumericValues ? deleteFilter() : null }\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport MyContext from '../context';\n\nexport default function Order() {\n  const { state: { results: planets } } = useContext(MyContext);\n\n  const { filterContext:\n    { filters:\n      { order, setOrder, result: { results } } } } = useContext(MyContext);\n\n  const handleOrder = ({ target: { name, value } }) => {\n    setOrder({\n      ...order,\n      [name]: value,\n    });\n  };\n\n  const isNumeric = (value) => /^-?\\d+$/.test(value);\n  // https://stackoverflow.com/questions/175739/built-in-way-in-javascript-to-check-if-a-string-is-a-valid-number\n\n  if (order.sort === 'ASC') {\n    results.sort((a, b) => {\n      if (isNumeric(a[order.column])) {\n        return a[order.column] - b[order.column];\n      }\n      return a[order.column].localeCompare(b[order.column]);\n    });\n  }\n\n  if (order.sort === 'DESC') {\n    results.sort((a, b) => {\n      if (isNumeric(a[order.column])) {\n        return b[order.column] - a[order.column];\n      }\n      return b[order.column].localeCompare(a[order.column]);\n    });\n  }\n\n  return (\n    <div className=\"numeric-filters-box2\">\n      Ordenar por: \n      <select className=\"select-filters\" data-testid=\"column-sort\" onChange={ handleOrder } name=\"column\">\n        { Object.keys(planets[0]).map((planetInfo) => (\n          planetInfo !== 'residents' ? <option key={ planetInfo }>{planetInfo}</option>\n            : null\n        )) }\n      </select>\n      <input\n        className=\"input-filters\"\n        type=\"radio\"\n        name=\"sort\"\n        value=\"ASC\"\n        data-testid=\"column-sort-input-asc\"\n        onChange={ handleOrder }\n      />\n      Ascendente\n      <input\n        className=\"input-filters\"\n        type=\"radio\"\n        name=\"sort\"\n        value=\"DESC\"\n        data-testid=\"column-sort-input-desc\"\n        onChange={ handleOrder }\n      />\n      Descendente\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport MyContext from '../context';\nimport DeleteFilters from './DeleteFilters';\nimport Order from './Order';\n\nexport default function FilterNumericValues() {\n  const { filterContext: { filters: { filterByNumericValues } } } = useContext(MyContext);\n\n  const { filterContext:\n    { filters:\n      { setColumn,\n        setComparison,\n        setValue,\n        setFilterByNumericValues,\n        numericValues } } } = useContext(MyContext);\n\n  const columns = ['population',\n    'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n  const comparisons = ['maior que', 'menor que', 'igual a'];\n  const [col, setCol] = useState(columns);\n\n  const handleChange = ({ target: { name, value } }) => {\n    if (name === 'column') {\n      setColumn(value);\n    }\n    if (name === 'comparison') {\n      setComparison(value);\n    }\n    if (name === 'valor') {\n      setValue(value);\n    }\n  };\n\n  const filterColumns = (colun) => {\n    const newColumns = columns.filter((coluna) => coluna !== colun);\n    setCol(newColumns);\n  };\n\n  const handleClick = () => {\n    const { column, comparison, value } = numericValues;\n    setFilterByNumericValues(\n      [\n        ...filterByNumericValues,\n        {\n          column,\n          comparison,\n          value,\n        },\n      ],\n    );\n    filterColumns(column);\n  };\n\n  return (\n    <div className=\"numeric-filters\">\n      <div className=\"numeric-filters-box1\">\n        Ordernar por:\n        <select className=\"select-filters\" onChange={ handleChange } data-testid=\"column-filter\" name=\"column\">\n          {col.map((c) => <option key={ c } value={ c }>{c}</option>)}\n        </select>\n        Que seja:\n        <select className=\"select-filters\" data-testid=\"comparison-filter\" name=\"comparison\" onChange={ handleChange }>\n          {comparisons.map((comp) => <option value={ comp } key={ comp }>{comp}</option>)}\n        </select>\n        <input\n          type=\"number\"\n          data-testid=\"value-filter\"\n          name=\"valor\"\n          onChange={ handleChange }\n          placeholder=\"Quantidade\"\n          />\n        <button\n          className=\"button-filters\"\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ handleClick }\n          >\n          Filtrar\n        </button>\n      </div>\n      <Order />\n      <DeleteFilters />\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport MyContext from '../context';\n\nexport default function FilterPlanetsByInput() {\n  const { filterContext:\n    { filters: { filterByName: { setName } } } } = useContext(MyContext);\n\n  const handleChange = ({ target: { value } }) => {\n    setName(value);\n  };\n\n  return (\n    <div className=\"input-filter-box\">\n      <span>Digite o nome do Planeta:</span>\n      <input\n        className=\"input-filter\"\n        data-testid=\"name-filter\"\n        type=\"text\"\n        onChange={ handleChange }\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Planets({ planets }) {\n  return (\n    planets.map((result) => (\n      <tr key={ result.name }>\n        <td data-testid=\"planet-name\">{result.name}</td>\n        <td>{result.rotation_period}</td>\n        <td>{result.orbital_period}</td>\n        <td>{result.diameter}</td>\n        <td>{result.climate}</td>\n        <td>{result.gravity}</td>\n        <td>{result.terrain}</td>\n        <td>{result.surface_water}</td>\n        <td>{result.population}</td>\n        <td>{result.films}</td>\n        <td>{result.created}</td>\n        <td>{result.edited}</td>\n        <td>{result.url}</td>\n      </tr>\n    ))\n  );\n}\n","import React, { useContext } from 'react';\nimport MyContext from '../context';\nimport Planets from './Planets';\n\nexport default function TableBody() {\n  const { state: { results }, filterContext:\n    { filters:\n      { filterByName: { name }, filterByNumericValues } } } = useContext(MyContext);\n\n  const planets = () => {\n    if (name) {\n      return results.filter((planet) => planet.name.toLowerCase()\n        .includes(name.toLowerCase()));\n    }\n    if (filterByNumericValues.length > 0) {\n      return filterByNumericValues.reduce((accumulator, current) => {\n        const { comparison, column, value } = current;\n        if (comparison === 'maior que') {\n          accumulator = results\n            .filter((planet) => Number(planet[column]) > Number(value));\n        }\n        if (comparison === 'menor que') {\n          accumulator = results\n            .filter((planet) => Number(planet[column]) < Number(value));\n        }\n        if (comparison === 'igual a') {\n          accumulator = results\n            .filter((planet) => Number(planet[column]) === Number(value));\n        }\n        return accumulator;\n      }, [results]);\n    }\n    return results;\n  };\n\n  return (\n    <Planets planets={ planets() } />\n  );\n}\n","import React, { useContext } from 'react';\nimport MyContext from '../context';\n\nexport default function TableHeader() {\n  const { state: { results } } = useContext(MyContext);\n  return (\n    <tr>\n      { Object.keys(results[0]).map((result) => (\n        result !== 'residents' ? <th key={ result }>{result}</th> : null\n      )) }\n    </tr>\n  );\n}\n","import React, { useContext } from 'react';\nimport MyContext from '../context';\nimport FilterNumericValues from './FilterNumericValues';\nimport FilterPlanetsByInput from './FilterPlanetsInput';\nimport TableBody from './TableBody';\nimport TableHeader from './TableHeader';\nimport starwarslogo from '../images/starwars.png';\nimport luke from '../images/luke.png';\nimport vader from '../images/vader.png';\n\nexport default function Table() {\n  const { loading } = useContext(MyContext);\n\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <>\n      <div className=\"filters\">\n        <FilterPlanetsByInput />\n        <FilterNumericValues />\n      </div>\n      <div className=\"table-logos\">\n        <img className=\"starwars-chars luke\" src={luke} alt=\"luke\" />\n        <div className=\"starwarsbox\">\n          <img src={starwarslogo} alt=\"starwarslogo\" className=\"starwarslogo\" />\n          <h2 className=\"table-title\">PLANETS SEARCH</h2>\n        </div>\n        <img className=\"starwars-chars vader\" src={vader} alt=\"vader\" />\n      </div>\n      <div className=\"row\">\n        <table id=\"example\" class=\"table table-striped table-bordered\" style={{width:\"100%\"}}>\n          <TableHeader />\n          <TableBody />\n        </table>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport Table from '../components/Table';\n\nexport default function HomePage() {\n  return (\n    <Table />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '.';\n\nfunction Provider({ children }) {\n  const URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const [state, setState] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [name, setName] = useState('');\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState(0);\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [order, setOrder] = useState({\n    column: 'name',\n    sort: 'ASC',\n  });\n  const [result, setResult] = useState([]);\n\n  const filterContext = {\n    filters: {\n      filterByName: {\n        name,\n        setName,\n      },\n      filterByNumericValues,\n      numericValues:\n        {\n          column,\n          comparison,\n          value,\n        },\n      order,\n      result,\n      setOrder,\n      setColumn,\n      setComparison,\n      setValue,\n      setFilterByNumericValues,\n\n    },\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const swPlanets = async () => {\n      const response = await fetch(URL)\n        .then((res) => res.json());\n      setState(response);\n      setResult(response);\n      setLoading(false);\n    };\n    swPlanets();\n  }, []);\n\n  return (\n    <MyContext.Provider value={ { state, loading, filterContext } }>\n      {children}\n    </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport Provider from './context/Provider';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider>\n        <HomePage />\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}